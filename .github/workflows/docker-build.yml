name: Build and Push PHP Images

on:
  push:
    branches: [main]
    paths:
      - '8.4-fpm/Dockerfile'
      - '8.4-fpm-alpine/Dockerfile'
      - '.github/workflows/docker-build.yml'
  workflow_dispatch:
    inputs:
      variant:
        description: 'Select variant to build'
        required: true
        type: choice
        options:
          - all
          - 8.4-fpm
          - 8.4-fpm-alpine

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      build-matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up build matrix
        id: set-matrix
        run: |
          # Default empty matrix with valid structure
          DEFAULT_MATRIX='{"include":[]}'
          
          # Manual workflow dispatch with specific selection
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            if [[ "${{ github.event.inputs.variant }}" == "all" ]]; then
              echo "matrix={\"include\":[{\"variant\":\"8.4-fpm\"},{\"variant\":\"8.4-fpm-alpine\"}]}" >> $GITHUB_OUTPUT
              exit 0
            else
              echo "matrix={\"include\":[{\"variant\":\"${{ github.event.inputs.variant }}\"}]}" >> $GITHUB_OUTPUT
              exit 0
            fi
          fi
          
          # Auto-trigger from push
          CHANGED_FILES=""
          if [[ -n "${{ github.event.before }}" && -n "${{ github.sha }}" ]]; then
            CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
          else
            # Fallback if we can't get the exact commit range
            CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD)
          fi
          
          # Check if workflow file was changed
          WORKFLOW_CHANGED=false
          if echo "$CHANGED_FILES" | grep -q ".github/workflows/docker-build.yml"; then
            WORKFLOW_CHANGED=true
          fi
          
          # Process changed Dockerfiles
          MATRIX_ITEMS=""
          
          # Check for 8.4-fpm changes
          if echo "$CHANGED_FILES" | grep -q "8.4-fpm/Dockerfile"; then
            MATRIX_ITEMS="{\"variant\":\"8.4-fpm\"}"
          fi
          
          # Check for 8.4-fpm-alpine changes
          if echo "$CHANGED_FILES" | grep -q "8.4-fpm-alpine/Dockerfile"; then
            if [[ -n "$MATRIX_ITEMS" ]]; then
              MATRIX_ITEMS="$MATRIX_ITEMS,{\"variant\":\"8.4-fpm-alpine\"}"
            else
              MATRIX_ITEMS="{\"variant\":\"8.4-fpm-alpine\"}"
            fi
          fi
          
          # If workflow changed but no Dockerfiles changed, build all
          if [[ "$WORKFLOW_CHANGED" == "true" && -z "$MATRIX_ITEMS" ]]; then
            echo "matrix={\"include\":[{\"variant\":\"8.4-fpm\"},{\"variant\":\"8.4-fpm-alpine\"}]}" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # If we have matrix items, create proper matrix
          if [[ -n "$MATRIX_ITEMS" ]]; then
            echo "matrix={\"include\":[$MATRIX_ITEMS]}" >> $GITHUB_OUTPUT
          else
            # Empty but valid matrix
            echo "matrix=$DEFAULT_MATRIX" >> $GITHUB_OUTPUT
          fi

  build:
    needs: setup
    if: ${{ fromJson(needs.setup.outputs.build-matrix).include[0] != null }}
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.setup.outputs.build-matrix) }}
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version tag
        id: version
        run: |
          # Get the current date
          DATE=$(date +'%Y.%m.%d')
          # Get the short commit hash
          COMMIT_SHORT=$(git rev-parse --short HEAD)
          echo "tag=${DATE}-${COMMIT_SHORT}" >> $GITHUB_OUTPUT
          echo "date=${DATE}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.variant }}/Dockerfile
          push: true
          build-args: |
            USER_ID=1000
            GROUP_ID=1000
          tags: |
            dommin/php-${{ matrix.variant }}:latest
            dommin/php-${{ matrix.variant }}:${{ steps.version.outputs.date }}
            dommin/php-${{ matrix.variant }}:${{ steps.version.outputs.tag }}
          labels: |
            org.opencontainers.image.source=${{ github.repositoryUrl }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          cache-to: type=gha,mode=max