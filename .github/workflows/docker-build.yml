name: Build and Push PHP Images

on:
  push:
    branches: [main]
    paths:
      - '8.4-fpm/Dockerfile'
      - '8.4-fpm-alpine/Dockerfile'
      - '.github/workflows/docker-build.yml'
  workflow_dispatch:
    inputs:
      variant:
        description: 'Specific variant to build (all, 8.4-fpm, 8.4-fpm-alpine)'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - 8.4-fpm
          - 8.4-fpm-alpine

jobs:
  check-workflow-changes:
    runs-on: ubuntu-latest
    outputs:
      workflow-changed: ${{ steps.check.outputs.changed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Check workflow changes
        id: check
        run: |
          CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} || git diff --name-only HEAD~1 HEAD)
          if echo "$CHANGED_FILES" | grep -q ".github/workflows/docker-build.yml"; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.filter.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect file changes
        id: filter
        run: |
          # If workflow was manually triggered with specified variant
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            if [ "${{ github.event.inputs.variant }}" == "all" ]; then
              # Build all images
              echo "matrix={\"variant\":[\"8.4-fpm\",\"8.4-fpm-alpine\"]}" >> $GITHUB_OUTPUT
            else
              # Build only specified variant
              echo "matrix={\"variant\":[\"${{ github.event.inputs.variant }}\"]}" >> $GITHUB_OUTPUT
            fi
            exit 0
          fi
          
          # Check which Dockerfiles were changed in this push
          CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} || git diff --name-only HEAD~1 HEAD)
          
          VARIANTS="[]"
          if echo "$CHANGED_FILES" | grep -q "8.4-fpm/Dockerfile"; then
            VARIANTS="[\"8.4-fpm\"]"
          fi
          
          if echo "$CHANGED_FILES" | grep -q "8.4-fpm-alpine/Dockerfile"; then
            if [ "$VARIANTS" == "[]" ]; then
              VARIANTS="[\"8.4-fpm-alpine\"]"
            else
              VARIANTS="[\"8.4-fpm\",\"8.4-fpm-alpine\"]"
            fi
          fi
          
          echo "matrix={\"variant\":$VARIANTS}" >> $GITHUB_OUTPUT

  build:
    needs: [detect-changes, check-workflow-changes]
    if: >
      needs.detect-changes.outputs.matrix != '{"variant":[]}' || 
      (needs.check-workflow-changes.outputs.workflow-changed == 'true' && github.event_name != 'workflow_dispatch')
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.detect-changes.outputs.matrix) }}
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version tag
        id: version
        run: |
          # Get the current date
          DATE=$(date +'%Y.%m.%d')
          # Get the short commit hash
          COMMIT_SHORT=$(git rev-parse --short HEAD)
          echo "tag=${DATE}-${COMMIT_SHORT}" >> $GITHUB_OUTPUT
          echo "date=${DATE}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.variant }}/Dockerfile
          push: true
          build-args: |
            USER_ID=1000
            GROUP_ID=1000
          tags: |
            dommin/php-${{ matrix.variant }}:latest
            dommin/php-${{ matrix.variant }}:${{ steps.version.outputs.date }}
            dommin/php-${{ matrix.variant }}:${{ steps.version.outputs.tag }}
          labels: |
            org.opencontainers.image.source=${{ github.repositoryUrl }}
          cache-from: type=gha
          cache-to: type=gha,mode=max